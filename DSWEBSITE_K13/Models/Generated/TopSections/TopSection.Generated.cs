//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.DotStarK;

[assembly: RegisterDocumentType(TopSection.CLASS_NAME, typeof(TopSection))]

namespace CMS.DocumentEngine.Types.DotStarK
{
	/// <summary>
	/// Represents a content item of type TopSection.
	/// </summary>
	public partial class TopSection : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "DotStarK.TopSection";


		/// <summary>
		/// The instance of the class that provides extended API for working with TopSection fields.
		/// </summary>
		private readonly TopSectionFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// TopSectionID.
		/// </summary>
		[DatabaseIDField]
		public int TopSectionID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("TopSectionID"), 0);
			}
			set
			{
				SetValue("TopSectionID", value);
			}
		}


		/// <summary>
		/// Main title.
		/// </summary>
		[DatabaseField]
		public string MainTitle
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MainTitle"), @"");
			}
			set
			{
				SetValue("MainTitle", value);
			}
		}


		/// <summary>
		/// Heading content .
		/// </summary>
		[DatabaseField]
		public string HeadingContentText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("HeadingContentText"), @"");
			}
			set
			{
				SetValue("HeadingContentText", value);
			}
		}


		/// <summary>
		/// ButtonText.
		/// </summary>
		[DatabaseField]
		public string ButtonText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ButtonText"), @"READ MORE");
			}
			set
			{
				SetValue("ButtonText", value);
			}
		}


		/// <summary>
		/// Button redirect URL.
		/// </summary>
		[DatabaseField]
		public string ButtonRedirectURL
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ButtonRedirectURL"), @"");
			}
			set
			{
				SetValue("ButtonRedirectURL", value);
			}
		}


		/// <summary>
		/// Button hover text.
		/// </summary>
		[DatabaseField]
		public string ButtonHoverText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ButtonHoverText"), @"");
			}
			set
			{
				SetValue("ButtonHoverText", value);
			}
		}


		/// <summary>
		/// Client caption count.
		/// </summary>
		[DatabaseField]
		public string ClientCaptionCount
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ClientCaptionCount"), @"100+");
			}
			set
			{
				SetValue("ClientCaptionCount", value);
			}
		}


		/// <summary>
		/// Client caption text.
		/// </summary>
		[DatabaseField]
		public string ClientCaptionText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ClientCaptionText"), @"Happy Client");
			}
			set
			{
				SetValue("ClientCaptionText", value);
			}
		}


		/// <summary>
		/// Alternative text.
		/// </summary>
		[DatabaseField]
		public string ImageAltText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ImageAltText"), @"");
			}
			set
			{
				SetValue("ImageAltText", value);
			}
		}


		/// <summary>
		/// Background image URL.
		/// </summary>
		[DatabaseField]
		public string ImageURL
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ImageURL"), @"");
			}
			set
			{
				SetValue("ImageURL", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with TopSection fields.
		/// </summary>
		[RegisterProperty]
		public TopSectionFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with TopSection fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class TopSectionFields : AbstractHierarchicalObject<TopSectionFields>
		{
			/// <summary>
			/// The content item of type TopSection that is a target of the extended API.
			/// </summary>
			private readonly TopSection mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="TopSectionFields" /> class with the specified content item of type TopSection.
			/// </summary>
			/// <param name="instance">The content item of type TopSection that is a target of the extended API.</param>
			public TopSectionFields(TopSection instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// TopSectionID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.TopSectionID;
				}
				set
				{
					mInstance.TopSectionID = value;
				}
			}


			/// <summary>
			/// Main title.
			/// </summary>
			public string MainTitle
			{
				get
				{
					return mInstance.MainTitle;
				}
				set
				{
					mInstance.MainTitle = value;
				}
			}


			/// <summary>
			/// Heading content .
			/// </summary>
			public string HeadingContentText
			{
				get
				{
					return mInstance.HeadingContentText;
				}
				set
				{
					mInstance.HeadingContentText = value;
				}
			}


			/// <summary>
			/// ButtonText.
			/// </summary>
			public string ButtonText
			{
				get
				{
					return mInstance.ButtonText;
				}
				set
				{
					mInstance.ButtonText = value;
				}
			}


			/// <summary>
			/// Button redirect URL.
			/// </summary>
			public string ButtonRedirectURL
			{
				get
				{
					return mInstance.ButtonRedirectURL;
				}
				set
				{
					mInstance.ButtonRedirectURL = value;
				}
			}


			/// <summary>
			/// Button hover text.
			/// </summary>
			public string ButtonHoverText
			{
				get
				{
					return mInstance.ButtonHoverText;
				}
				set
				{
					mInstance.ButtonHoverText = value;
				}
			}


			/// <summary>
			/// Client caption count.
			/// </summary>
			public string ClientCaptionCount
			{
				get
				{
					return mInstance.ClientCaptionCount;
				}
				set
				{
					mInstance.ClientCaptionCount = value;
				}
			}


			/// <summary>
			/// Client caption text.
			/// </summary>
			public string ClientCaptionText
			{
				get
				{
					return mInstance.ClientCaptionText;
				}
				set
				{
					mInstance.ClientCaptionText = value;
				}
			}


			/// <summary>
			/// Alternative text.
			/// </summary>
			public string ImageAltText
			{
				get
				{
					return mInstance.ImageAltText;
				}
				set
				{
					mInstance.ImageAltText = value;
				}
			}


			/// <summary>
			/// Background image URL.
			/// </summary>
			public string ImageURL
			{
				get
				{
					return mInstance.ImageURL;
				}
				set
				{
					mInstance.ImageURL = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="TopSection" /> class.
		/// </summary>
		public TopSection() : base(CLASS_NAME)
		{
			mFields = new TopSectionFields(this);
		}

		#endregion
	}
}