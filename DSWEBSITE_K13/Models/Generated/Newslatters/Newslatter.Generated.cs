//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.DotStarK;

[assembly: RegisterDocumentType(Newsletter.CLASS_NAME, typeof(Newsletter))]

namespace CMS.DocumentEngine.Types.DotStarK
{
	/// <summary>
	/// Represents a content item of type Newsletter.
	/// </summary>
	public partial class Newsletter : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "DotStarK.Newsletter";


		/// <summary>
		/// The instance of the class that provides extended API for working with Newsletter fields.
		/// </summary>
		private readonly NewsletterFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// NewsletterID.
		/// </summary>
		[DatabaseIDField]
		public int NewsletterID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("NewsletterID"), 0);
			}
			set
			{
				SetValue("NewsletterID", value);
			}
		}


		/// <summary>
		/// Background image.
		/// </summary>
		[DatabaseField]
		public string NewsletterName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("NewsletterName"), @"");
			}
			set
			{
				SetValue("NewsletterName", value);
			}
		}


		/// <summary>
		/// Background image.
		/// </summary>
		[DatabaseField]
		public string BackgroundImage
		{
			get
			{
				return ValidationHelper.GetString(GetValue("BackgroundImage"), @"");
			}
			set
			{
				SetValue("BackgroundImage", value);
			}
		}


		/// <summary>
		/// Background image URL.
		/// </summary>
		[DatabaseField]
		public string BackgroundImageURL
		{
			get
			{
				return ValidationHelper.GetString(GetValue("BackgroundImageURL"), @"");
			}
			set
			{
				SetValue("BackgroundImageURL", value);
			}
		}


		/// <summary>
		/// Title.
		/// </summary>
		[DatabaseField]
		public string TitleText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TitleText"), @"");
			}
			set
			{
				SetValue("TitleText", value);
			}
		}


		/// <summary>
		/// Content text.
		/// </summary>
		[DatabaseField]
		public string ContentText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ContentText"), @"");
			}
			set
			{
				SetValue("ContentText", value);
			}
		}


		/// <summary>
		/// Email.
		/// </summary>
		[DatabaseField]
		public string EmailTextboxName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("EmailTextboxName"), @"");
			}
			set
			{
				SetValue("EmailTextboxName", value);
			}
		}


		/// <summary>
		/// Button text.
		/// </summary>
		[DatabaseField]
		public string ButtonText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ButtonText"), @"SUBSCRIBE");
			}
			set
			{
				SetValue("ButtonText", value);
			}
		}


		/// <summary>
		/// Agree.
		/// </summary>
		[DatabaseField]
		public bool AgreedCheckbox
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("AgreedCheckbox"), true);
			}
			set
			{
				SetValue("AgreedCheckbox", value);
			}
		}


		/// <summary>
		/// Checkbox display text.
		/// </summary>
		[DatabaseField]
		public string CheckboxText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CheckboxText"), @"I agree with the email marketing terms");
			}
			set
			{
				SetValue("CheckboxText", value);
			}
		}


		/// <summary>
		/// Redirect URL.
		/// </summary>
		[DatabaseField]
		public string ButtonRedirectURL
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ButtonRedirectURL"), @"");
			}
			set
			{
				SetValue("ButtonRedirectURL", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Newsletter fields.
		/// </summary>
		[RegisterProperty]
		public NewsletterFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Newsletter fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class NewsletterFields : AbstractHierarchicalObject<NewsletterFields>
		{
			/// <summary>
			/// The content item of type Newsletter that is a target of the extended API.
			/// </summary>
			private readonly Newsletter mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="NewsletterFields" /> class with the specified content item of type Newsletter.
			/// </summary>
			/// <param name="instance">The content item of type Newsletter that is a target of the extended API.</param>
			public NewsletterFields(Newsletter instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// NewsletterID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.NewsletterID;
				}
				set
				{
					mInstance.NewsletterID = value;
				}
			}


			/// <summary>
			/// Background image.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.NewsletterName;
				}
				set
				{
					mInstance.NewsletterName = value;
				}
			}


			/// <summary>
			/// Background image.
			/// </summary>
			public string BackgroundImage
			{
				get
				{
					return mInstance.BackgroundImage;
				}
				set
				{
					mInstance.BackgroundImage = value;
				}
			}


			/// <summary>
			/// Background image URL.
			/// </summary>
			public string BackgroundImageURL
			{
				get
				{
					return mInstance.BackgroundImageURL;
				}
				set
				{
					mInstance.BackgroundImageURL = value;
				}
			}


			/// <summary>
			/// Title.
			/// </summary>
			public string TitleText
			{
				get
				{
					return mInstance.TitleText;
				}
				set
				{
					mInstance.TitleText = value;
				}
			}


			/// <summary>
			/// Content text.
			/// </summary>
			public string ContentText
			{
				get
				{
					return mInstance.ContentText;
				}
				set
				{
					mInstance.ContentText = value;
				}
			}


			/// <summary>
			/// Email.
			/// </summary>
			public string EmailTextboxName
			{
				get
				{
					return mInstance.EmailTextboxName;
				}
				set
				{
					mInstance.EmailTextboxName = value;
				}
			}


			/// <summary>
			/// Button text.
			/// </summary>
			public string ButtonText
			{
				get
				{
					return mInstance.ButtonText;
				}
				set
				{
					mInstance.ButtonText = value;
				}
			}


			/// <summary>
			/// Agree.
			/// </summary>
			public bool AgreedCheckbox
			{
				get
				{
					return mInstance.AgreedCheckbox;
				}
				set
				{
					mInstance.AgreedCheckbox = value;
				}
			}


			/// <summary>
			/// Checkbox display text.
			/// </summary>
			public string CheckboxText
			{
				get
				{
					return mInstance.CheckboxText;
				}
				set
				{
					mInstance.CheckboxText = value;
				}
			}


			/// <summary>
			/// Redirect URL.
			/// </summary>
			public string ButtonRedirectURL
			{
				get
				{
					return mInstance.ButtonRedirectURL;
				}
				set
				{
					mInstance.ButtonRedirectURL = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Newsletter" /> class.
		/// </summary>
		public Newsletter() : base(CLASS_NAME)
		{
			mFields = new NewsletterFields(this);
		}

		#endregion
	}
}