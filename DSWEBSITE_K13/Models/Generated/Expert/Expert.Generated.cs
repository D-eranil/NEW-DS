//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.DotStarK;

[assembly: RegisterDocumentType(Expert.CLASS_NAME, typeof(Expert))]

namespace CMS.DocumentEngine.Types.DotStarK
{
	/// <summary>
	/// Represents a content item of type Expert.
	/// </summary>
	public partial class Expert : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "DotStarK.Expert";


		/// <summary>
		/// The instance of the class that provides extended API for working with Expert fields.
		/// </summary>
		private readonly ExpertFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// ExpertID.
		/// </summary>
		[DatabaseIDField]
		public int ExpertID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ExpertID"), 0);
			}
			set
			{
				SetValue("ExpertID", value);
			}
		}


		/// <summary>
		/// Name.
		/// </summary>
		[DatabaseField]
		public string Name
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Name"), @"");
			}
			set
			{
				SetValue("Name", value);
			}
		}


		/// <summary>
		/// Short description.
		/// </summary>
		[DatabaseField]
		public string ShortDescription
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ShortDescription"), @"");
			}
			set
			{
				SetValue("ShortDescription", value);
			}
		}


		/// <summary>
		/// Bullet point.
		/// </summary>
		[DatabaseField]
		public string Points
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Points"), @"");
			}
			set
			{
				SetValue("Points", value);
			}
		}


		/// <summary>
		/// Image.
		/// </summary>
		[DatabaseField]
		public string Image
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Image"), @"");
			}
			set
			{
				SetValue("Image", value);
			}
		}


		/// <summary>
		/// Alternative text.
		/// </summary>
		[DatabaseField]
		public string ImageAltText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ImageAltText"), @"");
			}
			set
			{
				SetValue("ImageAltText", value);
			}
		}


		/// <summary>
		/// CTA button text.
		/// </summary>
		[DatabaseField]
		public string CTAButtonText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CTAButtonText"), @"");
			}
			set
			{
				SetValue("CTAButtonText", value);
			}
		}


		/// <summary>
		/// Themes color.
		/// </summary>
		[DatabaseField]
		public string ThemesColor
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ThemesColor"), @"");
			}
			set
			{
				SetValue("ThemesColor", value);
			}
		}


		/// <summary>
		/// Card Image.
		/// </summary>
		[DatabaseField]
		public string CardImage
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CardImage"), @"");
			}
			set
			{
				SetValue("CardImage", value);
			}
		}


		/// <summary>
		/// Card image alt text.
		/// </summary>
		[DatabaseField]
		public string CardImageAltText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CardImageAltText"), @"");
			}
			set
			{
				SetValue("CardImageAltText", value);
			}
		}


		/// <summary>
		/// Is navigation breadcrumbs.
		/// </summary>
		[DatabaseField]
		public bool IsCategoryBreadcrumbs
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("IsCategoryBreadcrumbs"), false);
			}
			set
			{
				SetValue("IsCategoryBreadcrumbs", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Expert fields.
		/// </summary>
		[RegisterProperty]
		public ExpertFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Expert fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ExpertFields : AbstractHierarchicalObject<ExpertFields>
		{
			/// <summary>
			/// The content item of type Expert that is a target of the extended API.
			/// </summary>
			private readonly Expert mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ExpertFields" /> class with the specified content item of type Expert.
			/// </summary>
			/// <param name="instance">The content item of type Expert that is a target of the extended API.</param>
			public ExpertFields(Expert instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// ExpertID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ExpertID;
				}
				set
				{
					mInstance.ExpertID = value;
				}
			}


			/// <summary>
			/// Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.Name;
				}
				set
				{
					mInstance.Name = value;
				}
			}


			/// <summary>
			/// Short description.
			/// </summary>
			public string ShortDescription
			{
				get
				{
					return mInstance.ShortDescription;
				}
				set
				{
					mInstance.ShortDescription = value;
				}
			}


			/// <summary>
			/// Bullet point.
			/// </summary>
			public string Points
			{
				get
				{
					return mInstance.Points;
				}
				set
				{
					mInstance.Points = value;
				}
			}


			/// <summary>
			/// Image.
			/// </summary>
			public string Image
			{
				get
				{
					return mInstance.Image;
				}
				set
				{
					mInstance.Image = value;
				}
			}


			/// <summary>
			/// Alternative text.
			/// </summary>
			public string ImageAltText
			{
				get
				{
					return mInstance.ImageAltText;
				}
				set
				{
					mInstance.ImageAltText = value;
				}
			}


			/// <summary>
			/// CTA button text.
			/// </summary>
			public string CTAButtonText
			{
				get
				{
					return mInstance.CTAButtonText;
				}
				set
				{
					mInstance.CTAButtonText = value;
				}
			}


			/// <summary>
			/// Themes color.
			/// </summary>
			public string ThemesColor
			{
				get
				{
					return mInstance.ThemesColor;
				}
				set
				{
					mInstance.ThemesColor = value;
				}
			}


			/// <summary>
			/// Card Image.
			/// </summary>
			public string CardImage
			{
				get
				{
					return mInstance.CardImage;
				}
				set
				{
					mInstance.CardImage = value;
				}
			}


			/// <summary>
			/// Card image alt text.
			/// </summary>
			public string CardImageAltText
			{
				get
				{
					return mInstance.CardImageAltText;
				}
				set
				{
					mInstance.CardImageAltText = value;
				}
			}


			/// <summary>
			/// Is navigation breadcrumbs.
			/// </summary>
			public bool IsCategoryBreadcrumbs
			{
				get
				{
					return mInstance.IsCategoryBreadcrumbs;
				}
				set
				{
					mInstance.IsCategoryBreadcrumbs = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Expert" /> class.
		/// </summary>
		public Expert() : base(CLASS_NAME)
		{
			mFields = new ExpertFields(this);
		}

		#endregion
	}
}