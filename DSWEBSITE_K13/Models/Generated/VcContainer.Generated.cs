//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.DotStarK;

[assembly: RegisterDocumentType(VcContainers.CLASS_NAME, typeof(VcContainers))]

namespace CMS.DocumentEngine.Types.DotStarK
{
	/// <summary>
	/// Represents a content item of type VcContainers.
	/// </summary>
	public partial class VcContainers : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "DotStarK.VcContainers";


		/// <summary>
		/// The instance of the class that provides extended API for working with VcContainers fields.
		/// </summary>
		private readonly VcContainersFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// VcContainersID.
		/// </summary>
		[DatabaseIDField]
		public int VcContainersID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("VcContainersID"), 0);
			}
			set
			{
				SetValue("VcContainersID", value);
			}
		}


		/// <summary>
		/// Container Name.
		/// </summary>
		[DatabaseField]
		public string ContainerName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ContainerName"), @"Containers");
			}
			set
			{
				SetValue("ContainerName", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with VcContainers fields.
		/// </summary>
		[RegisterProperty]
		public VcContainersFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with VcContainers fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class VcContainersFields : AbstractHierarchicalObject<VcContainersFields>
		{
			/// <summary>
			/// The content item of type VcContainers that is a target of the extended API.
			/// </summary>
			private readonly VcContainers mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="VcContainersFields" /> class with the specified content item of type VcContainers.
			/// </summary>
			/// <param name="instance">The content item of type VcContainers that is a target of the extended API.</param>
			public VcContainersFields(VcContainers instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// VcContainersID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.VcContainersID;
				}
				set
				{
					mInstance.VcContainersID = value;
				}
			}


			/// <summary>
			/// Container Name.
			/// </summary>
			public string ContainerName
			{
				get
				{
					return mInstance.ContainerName;
				}
				set
				{
					mInstance.ContainerName = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="VcContainers" /> class.
		/// </summary>
		public VcContainers() : base(CLASS_NAME)
		{
			mFields = new VcContainersFields(this);
		}

		#endregion
	}
}