//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.DotStarK;

[assembly: RegisterDocumentType(Activities.CLASS_NAME, typeof(Activities))]

namespace CMS.DocumentEngine.Types.DotStarK
{
	/// <summary>
	/// Represents a content item of type Activities.
	/// </summary>
	public partial class Activities : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "DotStarK.Activities";


		/// <summary>
		/// The instance of the class that provides extended API for working with Activities fields.
		/// </summary>
		private readonly ActivitiesFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// ActivitiesID.
		/// </summary>
		[DatabaseIDField]
		public int ActivitiesID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ActivitiesID"), 0);
			}
			set
			{
				SetValue("ActivitiesID", value);
			}
		}


		/// <summary>
		/// Name.
		/// </summary>
		[DatabaseField]
		public string Name
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Name"), @"");
			}
			set
			{
				SetValue("Name", value);
			}
		}


		/// <summary>
		/// Activity date.
		/// </summary>
		[DatabaseField]
		public DateTime Date
		{
			get
			{
				return ValidationHelper.GetDateTime(GetValue("Date"), DateTimeHelper.ZERO_TIME);
			}
			set
			{
				SetValue("Date", value);
			}
		}


		/// <summary>
		/// Activity image.
		/// </summary>
		[DatabaseField]
		public string Image
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Image"), @"");
			}
			set
			{
				SetValue("Image", value);
			}
		}


		/// <summary>
		/// Activity slider name.
		/// </summary>
		[DatabaseField]
		public string ActivitySliderName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ActivitySliderName"), @"");
			}
			set
			{
				SetValue("ActivitySliderName", value);
			}
		}


		/// <summary>
		/// Select gallery images.
		/// </summary>
		[DatabaseField]
		public string Attachments1
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Attachments"), "");
			}
			set
			{
				SetValue("Attachments", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Activities fields.
		/// </summary>
		[RegisterProperty]
		public ActivitiesFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Activities fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ActivitiesFields : AbstractHierarchicalObject<ActivitiesFields>
		{
			/// <summary>
			/// The content item of type Activities that is a target of the extended API.
			/// </summary>
			private readonly Activities mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ActivitiesFields" /> class with the specified content item of type Activities.
			/// </summary>
			/// <param name="instance">The content item of type Activities that is a target of the extended API.</param>
			public ActivitiesFields(Activities instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// ActivitiesID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ActivitiesID;
				}
				set
				{
					mInstance.ActivitiesID = value;
				}
			}


			/// <summary>
			/// Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.Name;
				}
				set
				{
					mInstance.Name = value;
				}
			}


			/// <summary>
			/// Activity date.
			/// </summary>
			public DateTime Date
			{
				get
				{
					return mInstance.Date;
				}
				set
				{
					mInstance.Date = value;
				}
			}


			/// <summary>
			/// Activity image.
			/// </summary>
			public string Image
			{
				get
				{
					return mInstance.Image;
				}
				set
				{
					mInstance.Image = value;
				}
			}


			/// <summary>
			/// Activity slider name.
			/// </summary>
			public string ActivitySliderName
			{
				get
				{
					return mInstance.ActivitySliderName;
				}
				set
				{
					mInstance.ActivitySliderName = value;
				}
			}


			/// <summary>
			/// Select gallery images.
			/// </summary>
			public IEnumerable<DocumentAttachment> Attachments
			{
				get
				{
					return mInstance.GetFieldDocumentAttachments("Attachments");
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Activities" /> class.
		/// </summary>
		public Activities() : base(CLASS_NAME)
		{
			mFields = new ActivitiesFields(this);
		}

		#endregion
	}
}