//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.DotStarK;

[assembly: RegisterDocumentType(Footer.CLASS_NAME, typeof(Footer))]

namespace CMS.DocumentEngine.Types.DotStarK
{
	/// <summary>
	/// Represents a content item of type Footer.
	/// </summary>
	public partial class Footer : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "DotStarK.Footer";


		/// <summary>
		/// The instance of the class that provides extended API for working with Footer fields.
		/// </summary>
		private readonly FooterFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// FooterID.
		/// </summary>
		[DatabaseIDField]
		public int FooterID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("FooterID"), 0);
			}
			set
			{
				SetValue("FooterID", value);
			}
		}


		/// <summary>
		/// Name.
		/// </summary>
		[DatabaseField]
		public string Name
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Name"), @"");
			}
			set
			{
				SetValue("Name", value);
			}
		}


		/// <summary>
		/// Address title.
		/// </summary>
		[DatabaseField]
		public string AddressTitle
		{
			get
			{
				return ValidationHelper.GetString(GetValue("AddressTitle"), @"");
			}
			set
			{
				SetValue("AddressTitle", value);
			}
		}


		/// <summary>
		/// Address.
		/// </summary>
		[DatabaseField]
		public string Address
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Address"), @"");
			}
			set
			{
				SetValue("Address", value);
			}
		}


		/// <summary>
		/// Primary contact number.
		/// </summary>
		[DatabaseField]
		public string PrimaryContact
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PrimaryContact"), @"");
			}
			set
			{
				SetValue("PrimaryContact", value);
			}
		}


		/// <summary>
		/// Primary email address.
		/// </summary>
		[DatabaseField]
		public string PrimaryEmail
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PrimaryEmail"), @"");
			}
			set
			{
				SetValue("PrimaryEmail", value);
			}
		}


		/// <summary>
		/// BadgeTitle.
		/// </summary>
		[DatabaseField]
		public string BadgeTitle
		{
			get
			{
				return ValidationHelper.GetString(GetValue("BadgeTitle"), @"Badges");
			}
			set
			{
				SetValue("BadgeTitle", value);
			}
		}


		/// <summary>
		/// Footer map.
		/// </summary>
		[DatabaseField]
		public string FooterMap
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FooterMap"), @"");
			}
			set
			{
				SetValue("FooterMap", value);
			}
		}


		/// <summary>
		/// Scroll top Icon.
		/// </summary>
		[DatabaseField]
		public string ScrollTopIcon
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ScrollTopIcon"), @"");
			}
			set
			{
				SetValue("ScrollTopIcon", value);
			}
		}


		/// <summary>
		/// Scroll top a alternative text.
		/// </summary>
		[DatabaseField]
		public string ScrollTopAltText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ScrollTopAltText"), @"Go to top");
			}
			set
			{
				SetValue("ScrollTopAltText", value);
			}
		}


		/// <summary>
		/// Chat Icon.
		/// </summary>
		[DatabaseField]
		public string ChatIcon
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ChatIcon"), @"");
			}
			set
			{
				SetValue("ChatIcon", value);
			}
		}


		/// <summary>
		/// Chat alternative text.
		/// </summary>
		[DatabaseField]
		public string ChatAltText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ChatAltText"), @"");
			}
			set
			{
				SetValue("ChatAltText", value);
			}
		}


		/// <summary>
		/// Footer copyright text.
		/// </summary>
		[DatabaseField]
		public string FooterCopyRightText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FooterCopyRightText"), @"© 2022 DotStark Technologies LLP Terms & Conditions Privacy Policies");
			}
			set
			{
				SetValue("FooterCopyRightText", value);
			}
		}


		/// <summary>
		/// Social Media Platform.
		/// </summary>
		[DatabaseField]
		public string SocialIcon
		{
			get
			{
				return ValidationHelper.GetString(GetValue("SocialIcon"), @"Facebook, Instagram, Tweeter, What app,  Pin rest");
			}
			set
			{
				SetValue("SocialIcon", value);
			}
		}


		/// <summary>
		/// Country name.
		/// </summary>
		[DatabaseField]
		public string CountryName1
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CountryName1"), @"India");
			}
			set
			{
				SetValue("CountryName1", value);
			}
		}


		/// <summary>
		/// Address.
		/// </summary>
		[DatabaseField]
		public string Address1
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Address1"), @"");
			}
			set
			{
				SetValue("Address1", value);
			}
		}


		/// <summary>
		/// Country name.
		/// </summary>
		[DatabaseField]
		public string CountryName2
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CountryName2"), @"USA");
			}
			set
			{
				SetValue("CountryName2", value);
			}
		}


		/// <summary>
		/// Address.
		/// </summary>
		[DatabaseField]
		public string Address2
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Address2"), @"USA");
			}
			set
			{
				SetValue("Address2", value);
			}
		}


		/// <summary>
		/// Country name.
		/// </summary>
		[DatabaseField]
		public string CountryName3
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CountryName3"), @"Malaysia");
			}
			set
			{
				SetValue("CountryName3", value);
			}
		}


		/// <summary>
		/// Address.
		/// </summary>
		[DatabaseField]
		public string Address3
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Address3"), @"");
			}
			set
			{
				SetValue("Address3", value);
			}
		}


		/// <summary>
		/// Country name.
		/// </summary>
		[DatabaseField]
		public string CountryName4
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CountryName4"), @"Australia");
			}
			set
			{
				SetValue("CountryName4", value);
			}
		}


		/// <summary>
		/// Address.
		/// </summary>
		[DatabaseField]
		public string Address4
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Address4"), @"Australia");
			}
			set
			{
				SetValue("Address4", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Footer fields.
		/// </summary>
		[RegisterProperty]
		public FooterFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Footer fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class FooterFields : AbstractHierarchicalObject<FooterFields>
		{
			/// <summary>
			/// The content item of type Footer that is a target of the extended API.
			/// </summary>
			private readonly Footer mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="FooterFields" /> class with the specified content item of type Footer.
			/// </summary>
			/// <param name="instance">The content item of type Footer that is a target of the extended API.</param>
			public FooterFields(Footer instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// FooterID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.FooterID;
				}
				set
				{
					mInstance.FooterID = value;
				}
			}


			/// <summary>
			/// Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.Name;
				}
				set
				{
					mInstance.Name = value;
				}
			}


			/// <summary>
			/// Address title.
			/// </summary>
			public string AddressTitle
			{
				get
				{
					return mInstance.AddressTitle;
				}
				set
				{
					mInstance.AddressTitle = value;
				}
			}


			/// <summary>
			/// Address.
			/// </summary>
			public string Address
			{
				get
				{
					return mInstance.Address;
				}
				set
				{
					mInstance.Address = value;
				}
			}


			/// <summary>
			/// Primary contact number.
			/// </summary>
			public string PrimaryContact
			{
				get
				{
					return mInstance.PrimaryContact;
				}
				set
				{
					mInstance.PrimaryContact = value;
				}
			}


			/// <summary>
			/// Primary email address.
			/// </summary>
			public string PrimaryEmail
			{
				get
				{
					return mInstance.PrimaryEmail;
				}
				set
				{
					mInstance.PrimaryEmail = value;
				}
			}


			/// <summary>
			/// BadgeTitle.
			/// </summary>
			public string BadgeTitle
			{
				get
				{
					return mInstance.BadgeTitle;
				}
				set
				{
					mInstance.BadgeTitle = value;
				}
			}


			/// <summary>
			/// Footer map.
			/// </summary>
			public string Map
			{
				get
				{
					return mInstance.FooterMap;
				}
				set
				{
					mInstance.FooterMap = value;
				}
			}


			/// <summary>
			/// Scroll top Icon.
			/// </summary>
			public string ScrollTopIcon
			{
				get
				{
					return mInstance.ScrollTopIcon;
				}
				set
				{
					mInstance.ScrollTopIcon = value;
				}
			}


			/// <summary>
			/// Scroll top a alternative text.
			/// </summary>
			public string ScrollTopAltText
			{
				get
				{
					return mInstance.ScrollTopAltText;
				}
				set
				{
					mInstance.ScrollTopAltText = value;
				}
			}


			/// <summary>
			/// Chat Icon.
			/// </summary>
			public string ChatIcon
			{
				get
				{
					return mInstance.ChatIcon;
				}
				set
				{
					mInstance.ChatIcon = value;
				}
			}


			/// <summary>
			/// Chat alternative text.
			/// </summary>
			public string ChatAltText
			{
				get
				{
					return mInstance.ChatAltText;
				}
				set
				{
					mInstance.ChatAltText = value;
				}
			}


			/// <summary>
			/// Footer copyright text.
			/// </summary>
			public string CopyRightText
			{
				get
				{
					return mInstance.FooterCopyRightText;
				}
				set
				{
					mInstance.FooterCopyRightText = value;
				}
			}


			/// <summary>
			/// Social Media Platform.
			/// </summary>
			public string SocialIcon
			{
				get
				{
					return mInstance.SocialIcon;
				}
				set
				{
					mInstance.SocialIcon = value;
				}
			}


			/// <summary>
			/// Country name.
			/// </summary>
			public string CountryName1
			{
				get
				{
					return mInstance.CountryName1;
				}
				set
				{
					mInstance.CountryName1 = value;
				}
			}


			/// <summary>
			/// Address.
			/// </summary>
			public string Address1
			{
				get
				{
					return mInstance.Address1;
				}
				set
				{
					mInstance.Address1 = value;
				}
			}


			/// <summary>
			/// Country name.
			/// </summary>
			public string CountryName2
			{
				get
				{
					return mInstance.CountryName2;
				}
				set
				{
					mInstance.CountryName2 = value;
				}
			}


			/// <summary>
			/// Address.
			/// </summary>
			public string Address2
			{
				get
				{
					return mInstance.Address2;
				}
				set
				{
					mInstance.Address2 = value;
				}
			}


			/// <summary>
			/// Country name.
			/// </summary>
			public string CountryName3
			{
				get
				{
					return mInstance.CountryName3;
				}
				set
				{
					mInstance.CountryName3 = value;
				}
			}


			/// <summary>
			/// Address.
			/// </summary>
			public string Address3
			{
				get
				{
					return mInstance.Address3;
				}
				set
				{
					mInstance.Address3 = value;
				}
			}


			/// <summary>
			/// Country name.
			/// </summary>
			public string CountryName4
			{
				get
				{
					return mInstance.CountryName4;
				}
				set
				{
					mInstance.CountryName4 = value;
				}
			}


			/// <summary>
			/// Address.
			/// </summary>
			public string Address4
			{
				get
				{
					return mInstance.Address4;
				}
				set
				{
					mInstance.Address4 = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Footer" /> class.
		/// </summary>
		public Footer() : base(CLASS_NAME)
		{
			mFields = new FooterFields(this);
		}

		#endregion
	}
}