//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.DotStarK;

[assembly: RegisterDocumentType(Clientele.CLASS_NAME, typeof(Clientele))]

namespace CMS.DocumentEngine.Types.DotStarK
{
	/// <summary>
	/// Represents a content item of type Clientele.
	/// </summary>
	public partial class Clientele : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "DotStarK.Clientele";


		/// <summary>
		/// The instance of the class that provides extended API for working with Clientele fields.
		/// </summary>
		private readonly ClienteleFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// ClienteleID.
		/// </summary>
		[DatabaseIDField]
		public int ClienteleID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ClienteleID"), 0);
			}
			set
			{
				SetValue("ClienteleID", value);
			}
		}


		/// <summary>
		/// Name.
		/// </summary>
		[DatabaseField]
		public string Name
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Name"), @"");
			}
			set
			{
				SetValue("Name", value);
			}
		}


		/// <summary>
		/// Content Text.
		/// </summary>
		[DatabaseField]
		public string ContentText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ContentText"), @"");
			}
			set
			{
				SetValue("ContentText", value);
			}
		}


		/// <summary>
		/// Client Image.
		/// </summary>
		[DatabaseField]
		public string ClientImage
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ClientImage"), @"");
			}
			set
			{
				SetValue("ClientImage", value);
			}
		}


		/// <summary>
		/// Client image alternative text.
		/// </summary>
		[DatabaseField]
		public string ClientImageAltText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ClientImageAltText"), @"");
			}
			set
			{
				SetValue("ClientImageAltText", value);
			}
		}


		/// <summary>
		/// Client image URL.
		/// </summary>
		[DatabaseField]
		public string ClientImageURL
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ClientImageURL"), @"");
			}
			set
			{
				SetValue("ClientImageURL", value);
			}
		}


		/// <summary>
		/// Active.
		/// </summary>
		[DatabaseField]
		public bool IsActive
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("IsActive"), true);
			}
			set
			{
				SetValue("IsActive", value);
			}
		}


		/// <summary>
		/// OrderNumber.
		/// </summary>
		[DatabaseField]
		public int OrderNumber
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("OrderNumber"), 0);
			}
			set
			{
				SetValue("OrderNumber", value);
			}
		}


		/// <summary>
		/// Client designation.
		/// </summary>
		[DatabaseField]
		public string ClientDesignation
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ClientDesignation"), @"");
			}
			set
			{
				SetValue("ClientDesignation", value);
			}
		}


		/// <summary>
		/// Client full name.
		/// </summary>
		[DatabaseField]
		public string ClientFullName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ClientFullName"), @"");
			}
			set
			{
				SetValue("ClientFullName", value);
			}
		}


		/// <summary>
		/// Client location.
		/// </summary>
		[DatabaseField]
		public string ClientLocation
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ClientLocation"), @"");
			}
			set
			{
				SetValue("ClientLocation", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Clientele fields.
		/// </summary>
		[RegisterProperty]
		public ClienteleFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Clientele fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ClienteleFields : AbstractHierarchicalObject<ClienteleFields>
		{
			/// <summary>
			/// The content item of type Clientele that is a target of the extended API.
			/// </summary>
			private readonly Clientele mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ClienteleFields" /> class with the specified content item of type Clientele.
			/// </summary>
			/// <param name="instance">The content item of type Clientele that is a target of the extended API.</param>
			public ClienteleFields(Clientele instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// ClienteleID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ClienteleID;
				}
				set
				{
					mInstance.ClienteleID = value;
				}
			}


			/// <summary>
			/// Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.Name;
				}
				set
				{
					mInstance.Name = value;
				}
			}


			/// <summary>
			/// Content Text.
			/// </summary>
			public string ContentText
			{
				get
				{
					return mInstance.ContentText;
				}
				set
				{
					mInstance.ContentText = value;
				}
			}


			/// <summary>
			/// Client Image.
			/// </summary>
			public string ClientImage
			{
				get
				{
					return mInstance.ClientImage;
				}
				set
				{
					mInstance.ClientImage = value;
				}
			}


			/// <summary>
			/// Client image alternative text.
			/// </summary>
			public string ClientImageAltText
			{
				get
				{
					return mInstance.ClientImageAltText;
				}
				set
				{
					mInstance.ClientImageAltText = value;
				}
			}


			/// <summary>
			/// Client image URL.
			/// </summary>
			public string ClientImageURL
			{
				get
				{
					return mInstance.ClientImageURL;
				}
				set
				{
					mInstance.ClientImageURL = value;
				}
			}


			/// <summary>
			/// Active.
			/// </summary>
			public bool IsActive
			{
				get
				{
					return mInstance.IsActive;
				}
				set
				{
					mInstance.IsActive = value;
				}
			}


			/// <summary>
			/// OrderNumber.
			/// </summary>
			public int OrderNumber
			{
				get
				{
					return mInstance.OrderNumber;
				}
				set
				{
					mInstance.OrderNumber = value;
				}
			}


			/// <summary>
			/// Client designation.
			/// </summary>
			public string ClientDesignation
			{
				get
				{
					return mInstance.ClientDesignation;
				}
				set
				{
					mInstance.ClientDesignation = value;
				}
			}


			/// <summary>
			/// Client full name.
			/// </summary>
			public string ClientFullName
			{
				get
				{
					return mInstance.ClientFullName;
				}
				set
				{
					mInstance.ClientFullName = value;
				}
			}


			/// <summary>
			/// Client location.
			/// </summary>
			public string ClientLocation
			{
				get
				{
					return mInstance.ClientLocation;
				}
				set
				{
					mInstance.ClientLocation = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Clientele" /> class.
		/// </summary>
		public Clientele() : base(CLASS_NAME)
		{
			mFields = new ClienteleFields(this);
		}

		#endregion
	}
}